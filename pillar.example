#
# forged-formula
#
# Copyright (C) 2025   darix
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

include:
  - includes.forgejo-runner-defaults
  - includes.forgejo-defaults

## forgejo
#
# see https://forgejo.org/docs/next/admin/config-cheat-sheet for additional documentation.
#
forgejo:
  use_apparmor: True
  config:
    server:
      PROTOCOL:           http
      SSH_DOMAIN:         {{ grains.id }}
      DOMAIN:             {{ grains.id }}
      ROOT_URL:           http://{{ grains.id }}:3000/
      DISABLE_SSH:        "false"
      LFS_START_SERVER:   "true"
      LFS_JWT_SECRET:     {{ "forgejo/lfs_jwt_secret" | gopass }}
    database:
      DB_TYPE:            postgres
      HOST:               {{ grains.id }}:5432
      NAME:               forgejo
      USER:               forgejo
      PASSWD:             {{ "forgejo/db_password" | gopass }}
      SSL_MODE:           verify-full
    security:
      INSTALL_LOCK:       "true"
      SECRET_KEY:         {{ "forgejo/security_secret_key" | gopass }}
      INTERNAL_TOKEN:     {{ "forgejo/security_internal_token" | gopass }}
      PASSWORD_HASH_ALGO: pbkdf2_hi
    oauth2:
      ENABLED:            "false"
      JWT_SECRET:         {{ "forgejo/oauth2_jwt_secret" | gopass }}

## forgejo_runner
#
# if you don't want to change anything beyond the default config you are already good to go.
# the include will provide you the same default config which is already in the package.
# if you want salt to automatically register the runner you can pass
#
# forgejo_runner:
#   external_server:       http://{{ grains.id }}
#   runner_token:          {{ "forgejo_runner/registration_token" | gopass }}


## this requires the profile-base.systemd-overrides from the suse-profile-base formula
#
# ensure that the runner service only starts when the container engine is up:
# for docker use container_service docker.service
#
# {%- set container_service = "podman.socket" %}
# systemd:
#  overrides:
#    forgejo-runner.service:
#      Unit:
#        - After={{ container_service }}
#        - BindsTo={{ container_service }}
#
# forgejo_runner:
#   # ensure salt sets up the container engine before forgejo-runner
#   require:
#     - podman_socket_service
#     - systemd_override_forgejo-runner_service
#     - systemd_daemon_reload
#   external_server:       http://{{ grains.id }}
#   runner_token:          {{ "forgejo_runner/registration_token" | gopass }}
#   container:
#     # tell it to use the podman socket
#     docker_host: unix:///run/podman/podman.sock
#